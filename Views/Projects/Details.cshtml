@model TheBugTracker.Models.Project
@using TheBugTracker.Models.Enums
@using TheBugTracker.Services.Interfaces
@using Microsoft.AspNetCore.Identity

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService
@inject IBTTicketHistoryService HistoryService



@{
    ViewData["Title"] = "Details";
    BTUser btUser = await UserManager.GetUserAsync(User);
    BTUser projectManager = await ProjectService.GetProjectManagerAsync(Model.Id);
}

<h1>Details</h1>

<div>
    <div class="container-fluid">

        <div class="row gy-2 mt-2">
            <div class="col">
                <div class="card w-100 h-100" style="overflow-y:auto;">
                    <div class="card-body p-4">
                        <h3 class="card-title fw-semibold mb-4 border-bottom border-primary pb-3">Basic Project Info </h3>
                        @* Project Name *@
                        <h5>@Model.Name</h5>
                        <a href="javascript:void(0);" class="m2 d-flex justify-content-start">
                            @if (Model.FileData != null)
                            {
                                <img class="media-object" src="data:image/*;base64,@(Convert.ToBase64String(Model.FileData))" alt="" style="width:250px;height:175px;" />
                            }
                            else
                            {
                                <img class="media-object" src="/img/default_Project.jpg" alt="" style="width:250px;height:175px;" />
                            }
                        </a>
                        @* Project Description *@
                        <p>@Html.Raw(Model.Description)</p>
                        <div class="progress-container progress-info m-b-25">
                            <span class="progress-badge" style="font-size:small">Project Status</span>
                            <div class="progress">
                                @* Razor code block *@
                                @{
                                    var start = Model.StartDate.DateTime;
                                    var end = Model.EndDate.DateTime;
                                    var today = DateTime.Now;
                                    var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                                }
                                <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
                                    @* Use Progress Bar code variable here *@
                                    <span class="progress-value">@percent%</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="card w-100 h-100">
                    <div class="card-body p-4">
                        <h3 class="card-title fw-semibold mb-4 border-bottom border-primary pb-3">Project Details</h3>
                        <ul class=" list-unstyled basic-list text-dark fw-bold">
                            <li><strong>Start Date:</strong> <span class="">@Model.StartDate.ToString("dd MMM, yyyy")</span></li>
                            <li><strong>Deadline:</strong> <span class="">@Model.EndDate.ToString("dd MMM, yyyy")</span></li>
                            <li><strong>Priority:</strong> <span class="">@Model.ProjectPriority?.Name</span></li>
                            @* if() logic *@
                            @if (today < end && today >= start)
                            {
                                <li><strong>Status:</strong> <span class="">Active</span></li>

                            }
                            else
                            {
                                <li><strong>Status:</strong> <span class="">Inactive</span></li>
                            }
                        </ul>
                        <hr />
                        <h5 class="mt-3 fw-bolder fs-4">Project Manager: </h5>
                        @if (projectManager != null)
                        {
                            <div>
                                @if (projectManager.AvatarFileData != null)
                                {
                                    <img class="rounded-circle border border-dark" style="width:60px;height:60px;" src="data:image/*;base64,@Convert.ToBase64String(projectManager.AvatarFileData)" alt="" />
                                }
                                else
                                {
                                    <img src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" style="width:60px;height:60px;" alt="" class="rounded-circle">
                                }
                                <div>
                                    <h5>@projectManager.FullName</h5>
                                    <span>@projectManager.Email</span>
                                    <p class="text-muted mb-0">Project Manager</p>
                                    @if (User.IsInRole(nameof(Roles.Admin)) || (btUser.Id == projectManager.Id))
                                    {
                                        <a class="btn btn-xs btn-primary alert-primary" style="font:small" asp-action="AssignMembers" asp-controller="Projects" asp-route-id="@Model.Id">Manage Team</a>
                                    }
                                </div>

                            </div>
                        }
                        else
                        {
                            <div>
                                <img src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" style="width:60px;height:60px;" alt="" class="rounded-circle">
                                <div class="wid-u-info">
                                    <h5 class="text-muted mb-0">Not Assigned</h5>
                                    @if (User.IsInRole(nameof(Roles.Admin)))
                                    {
                                        <span><a asp-action="AssignPM" asp-controller="Projects" asp-route-projectId="@Model.Id" class="btn btn-xs btn-outline-info">Assign PM</a></span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row gy-2 mt-2">
            <div class="col">
                <div class="card w-100">
                    <div class="card-body p-4" style="overflow-y:auto;height:300px;">
                        <h3 class="card-title fw-semibold mb-4 border-bottom border-primary pb-3">Project Team </h3>
                        <ul class="right_chat list-unstyled mb-0">

                            @* Logic for avatars *@
                            @foreach (BTUser member in await ProjectService.GetAllProjectMembersExceptPMAsync(Model.Id))
                            {
                                <li class="">
                                    <a href="">
                                        <div class="media">
                                            @if (member.AvatarFileData != null)
                                            {
                                                <img class="rounded-circle border border-dark" style="width:40px;height:40px;" src="data:image/*;base64,@Convert.ToBase64String(member.AvatarFileData)" alt="" />
                                            }
                                            else
                                            {
                                                <img src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" style="width:40px;height:40px;" alt="" class="rounded-circle">
                                            }

                                        </div>
                                    </a>
                                    <div class="">
                                        <span class="">@member.FullName</span>
                                        <span class="" style="font-size:x-small">[@((await UserManager.GetRolesAsync(member)).FirstOrDefault())]</span>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>

            <div class="col">
                <div class="card w-100">
                    <div class="card-body p-4" style="overflow-y:auto;height:300px;">
                        <h3 class="card-title fw-semibold mb-4 border-bottom border-primary pb-3">Project History </h3>
                        <ul class="timeline-widget mb-0 position-relative mb-n5">
                            @foreach (TicketHistory history in await HistoryService.GetProjectTicketsHitoriesAsync(Model.Id, btUser.CompanyId))
                            {
                                <div class="">
                                    <span class="date"> @history.Created.ToString("dd MMM, yyyy")</span>
                                    <h6>@history.Description</h6>
                                    <span>By: <a href="" title="@history.User.FullName">@history.User.FullName</a></span>
                                    <div class="">
                                        @if (history.Description.Contains("New Ticket Created"))
                                        {
                                            <p>A Ticket was added.</p>
                                        }
                                        else if (history.Property.Equals("TicketComment") || history.Property.Equals("TicketAttachment"))
                                        {
                                            <p>A <b>@history.Property</b> was added.</p>
                                        }
                                        else
                                        {
                                            <p>The Ticket <b>@history.Property</b> was edited</p>
                                            <p>@($"Previous {history.Property}:") <span style="color:red">@history.OldValue</span></p>
                                            <p>@($"Current {history.Property}:") <span style="color:green">@history.NewValue</p>

                                        }
                                    </div>

                                </div>
                                <hr />
                            }
                            </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="row gy-2">

            <div class="col-md-12 col">
                <div class="mt-0">
                    <div class="card m-1 p-2">

                        <div class="card-body">
                            <div class="card-title">
                                <h2>Tickets</h2>
                            </div>
                            <div class="table-responsive" style="overflow-y:auto;height:600px;">
                                <table class="table table-hover" id="allProjects">
                                    <thead class="">
                                        <tr>
                                            @* Table header *@
                                            <th>Title</th>
                                            <th>Developer</th>
                                            <th>Status</th>
                                            <th>Priority</th>
                                            <th>Date</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @* Table body *@
                                        @foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
                                        {
                                            <tr>
                                                <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
                                                <td>
                                                    @if (ticket.DeveloperUserId != null)
                                                    {
                                                        @ticket.DeveloperUser?.FullName
                                                    }
                                                    else
                                                    {
                                                        if (User.IsInRole(nameof(Roles.Admin)) || User.IsInRole(nameof(Roles.ProjectManager)))
                                                        {
                                                            <a class="btn btn-xs btn-info" asp-action="AssignDeveloper" asp-controller="Tickets" asp-route-id="@ticket.Id">Assign Dev</a>
                                                        }

                                                    }
                                                </td>
                                                @if (ticket.TicketStatus.Name == "New")
                                                {
                                                    <td><span class="badge-success">@ticket.TicketStatus.Name </span></td>

                                                }
                                                else
                                                {
                                                    <td><span class="badge-primary">@ticket.TicketStatus.Name </span></td>
                                                }
                                                <td><span class="badge-warning">@ticket.TicketPriority.Name </span></td>
                                                <td>@ticket.Created.ToString("MM-dd-yyyy")</td>
                                                <td>
                                                    <a class="btn btn-sm btn-outline-info" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a>
                                                    @if (ticket.DeveloperUserId == btUser.Id || ticket.OwnerUserId == btUser.Id || (projectManager?.Id == btUser.Id) || User.IsInRole(nameof(Roles.Admin)))
                                                    {
                                                        <a class="btn btn-sm btn-outline-secondary" asp-action="Edit" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-pencil"></i></a>
                                                    }

                                                    @if (User.IsInRole("Admin") || (projectManager?.Id == btUser.Id))
                                                    {
                                                        <a class="btn btn-sm btn-outline-danger"><i class="fs-5 bi-archive"></i></a>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>


    </div>
</div>

@section Scripts {
    <script src="/assets/libs/jquery/dist/jquery.min.js"></script>
    <script src="/assets/libs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/js/sidebarmenu.js"></script>
    <script src="/assets/libs/simplebar/dist/simplebar.js"></script>

}