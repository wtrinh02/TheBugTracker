@model IEnumerable<TheBugTracker.Models.Ticket>
@using Microsoft.AspNetCore.Identity
@using TheBugTracker.Services.Interfaces
@using TheBugTracker.Models.Enums

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService

@{
    ViewData["Title"] = "All Tickets";
    BTUser bTUser = await UserManager.GetUserAsync(User);
}

<h1>All Tickets</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@if(Model.Count() == 0)
{
    <hr />
    <h3 class="text-center">There are no Archived Projects</h3>

}
else{
<table class="table table-primary table-striped table-hover border border-1 border-primary mb-2" id="allProjects">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Project)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketPriority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketStatus)
            </th>
            <th>
                Developer
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
                <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
                <td class="test">
                @Html.DisplayFor(modelItem => item.Description)
            </td>
                <td class="test">
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketPriority.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketStatus.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeveloperUser.FullName)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
                @if (User.IsInRole(nameof(Roles.Admin)) || item.DeveloperUserId == bTUser.Id || item.OwnerUserId == bTUser.Id || await ProjectService.IsAssignedProjectManagerAsync(bTUser.Id, item.ProjectId))
                {
                        <span>|</span><a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                }
                @if (User.IsInRole(nameof(Roles.Admin)) || await ProjectService.IsAssignedProjectManagerAsync(bTUser.Id, item.ProjectId))
                {
                    if (item.Archived)
                    {
                        <span>|</span><a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                    }
                    else
                    {
                            <span>|</span><a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                    }
                }
            </td>
        </tr>
}
    </tbody>
</table>
}

@section Scripts {
    <script src="/assets/libs/jquery/dist/jquery.min.js"></script>
    <script src="/assets/libs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/js/sidebarmenu.js"></script>
    <script src="/assets/libs/simplebar/dist/simplebar.js"></script>

}