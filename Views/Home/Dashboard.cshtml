@model TheBugTracker.Models.ViewModels.DashboardViewModel
@using Microsoft.AspNetCore.Identity
@using TheBugTracker.Services.Interfaces
@using TheBugTracker.Models.Enums

@inject UserManager<BTUser> UserManager
@inject IBTRolesService RolesService
@inject IBTProjectService ProjectService

@{
	ViewData["Title"] = "Dashboard";

	BTUser btUser = await UserManager.GetUserAsync(User);


}

<!-- Styles -->
<style>
	.amDark {
		background-color: #30303d;
		color: #fff;
	}

	#chartdiv {
		width: 100%;
		height: 500px;
	}

	body {
		margin-bottom: 60px;
		background: #f2f7ff;
	}

</style>


<h1>Dashboard</h1>


<div>
	<div classxfont-weighteighteightgetainer-fluid">
		
		<!-- Info Pills -->
		<div class="row mt-3">
			<div class="col col-12-md">
				<a asp-action="AllProjects" asp-controller="Projects" style="text-decoration:none">
				<div class="card overflow-hidden">
					<div class="card-body p-4">
						<h5 class="card-title mb-9 fw-semibold">Projects <span class="text-primary fs-3">| Active</span></h5>
						<div class="row align-items-center">
							<div class="col-4">
								
									<div class="p-4 rounded-circle d-flex align-items-center justify-content-center bg-primary-subtle">
									<i class="fa fa-clipboard-list fa-3x"></i>
									</div>
								
							</div>
							<div class="col-8">
								<span class="fw-bolder text-dark">@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()  <span class="fw-normal ms-1"> Active Projects</span></span> <br />
									<span class="fw-bolder text-dark">@ViewData["count"] <span class="fw-normal ms-1"> Need PM Assign</span></span> <br />
								<span class="ms-1 fw-bolder text-dark">@Model.Projects.Where(p => p.EndDate > DateTime.Now && (p.EndDate - DateTime.Now).TotalDays <= 30).Count()  <span class="fw-normal ms-1"> Deadline < 1 month</span></span> <br />
								<span class=" fw-bolder text-dark">@Model.Projects.Where(p => p.EndDate > DateTime.Now && (p.EndDate - DateTime.Now).TotalDays <= 7).Count()  <span class="fw-normal ms-1"> Deadline < 1 week</span></span>

							</div>

						</div>
					</div>
				</div>
				</a>
			</div>
			<div class="col col-12-md">
				<a asp-action="AllTickets" asp-controller="Tickets" style="text-decoration:none">
				<div class="card overflow-hidden">
					<div class="card-body p-4">
						<h5 class="card-title mb-9 fw-semibold">Tickets <span class="text-primary fs-3">| Total</span></h5>
						<div class="row align-items-center">
							<div class="col-4">

								<div class="p-4 rounded-circle d-flex align-items-center justify-content-center bg-primary-subtle">
										<i class="fa-solid fa-ticket fa-3x"></i>
								</div>

							</div>
							<div class="col-8">
								<span class="fw-bolder text-dark">@Model.Tickets.Count()  <span class="fw-normal ms-1"> Total Tickets</span></span> <br />
								<span class="fw-bolder text-dark">@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count() <span class="fw-normal ms-1"> Unassigned Tickets</span></span> <br />
								<span class="ms-1 fw-bolder text-dark">@Model.Tickets.Where(t => t.TicketStatus?.Name == nameof(BTTicketPriority.Urgent)).Count()  <span class="fw-normal ms-1"> Urgent Priotiy</span></span> <br />
								<span class="fw-bolder text-dark">@Model.Tickets.Where(t => t.TicketStatus?.Name == nameof(BTTicketPriority.High)).Count()  <span class="fw-normal ms-1"> High Priority</span></span>

							</div>

						</div>
					</div>
				</div>
				</a>
			</div>
			<div class="col col-12-md">
				<div class="card overflow-hidden">
					<div class="card-body p-4">
						<h5 class="card-title mb-9 fw-semibold">Members <span class="text-primary fs-3">| By Role</span></h5>
						<div class="row align-items-center">
							<div class="col-4">

								<div class="p-4 rounded-circle d-flex align-items-center justify-content-center bg-primary-subtle">
									<i class="fa-solid fa-user-group fa-3x"></i>
								</div>

							</div>
							<div class="col-8">
								<span class="fw-bolder text-dark">@ViewData["numAdmin"]  <span class="fw-normal ms-1"> Admin</span></span> <br />
								<span class="fw-bolder text-dark">@ViewData["numPM"] <span class="fw-normal ms-1"> Project Managers</span></span> <br />
								<span class="ms-1 fw-bolder text-dark">@ViewData["numDev"]  <span class="fw-normal ms-1"> Developer</span></span> <br />
								<span class="fw-bolder text-dark">@ViewData["numSub"]  <span class="fw-normal ms-1"> Submitter </span></span>

							</div>

						</div>
					</div>
				</div>
			</div>

		</div>

		<!-- Charts-->
		<div class="row gy-4">
			<div class="col-lg-8 d-flex align-items-strech gy-2">
				<div class="card col m-1 p-2 overflow-hidden">
					<div class="card-body" style="height:600px;overflow-y:auto;">
						<h5>Project: Tickets vs Developers</h5>
						<p>[Plotly]</p>
						<!-- HTML -->
						<div id="plotlyChart"></div>
					</div>
				</div>
			</div>
			<div class="col-lg-4 ">
				<div class="row">
					<div class="col-lg-12">
						<!-- Project Ticket Count Chart -->
						<div class="card overflow-hidden">

								<div class="card-body p-4">
									<h5>Project Tickets Count (%)</h5>
									<p>[Google Charts]</p>
									<div id="donut"></div>
								</div>

						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-lg-12 ">
						<!-- Ticket Priority chart -->
						<div class="card overflow-hidden">

							<div class="card-body p-4">
								<h5>Tickets by Priority</h5>
								<p>[Google Charts]</p>
								<div id="chart3D"></div>
							</div>

						</div>
					</div>
				</div>
				
			</div>

		</div>


	</div>

	<div class="mt-3 ">
		<div class="row">
			@* Projects Table *@
			<div class="col-12">
				<div class="">
					<div class="card m-1 p-2">
						<div class="card-header">
							<h2>Projects</h2>
						</div>
						<div class="card-body">
							
							<div class="table-responsive" style="overflow-y:auto;height:600px;">
								<table id="projectsTable" class="table table-hover">
									<thead class="">
										<tr>
											
											<th>
												Name
											</th>
											<th>
												Start Date
											</th>
											<th>
												End Date
											</th>
											<th>Priority</th>
											<th>Action</th>
										</tr>
									</thead>
									<tbody>
										
										@foreach (var project in Model.Projects)
										{
											<tr>
												<td><a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" style ="color:black"><strong>@project.Name</strong></a></td>
												<td><span style="font-size:small">@project.StartDate.ToString("MM.dd.yyyy")</span></td>
												<td><span style="font-size:small">@project.EndDate.ToString("MM.dd.yyyy")</span></td>
												@if (@project.ProjectPriority?.Name == nameof(BTProjectPriority.Low))
												{
													<td><span class="badge bg-success">@project.ProjectPriority?.Name</span></td>
												}
												else if (@project.ProjectPriority?.Name == nameof(BTProjectPriority.Medium))
												{
													<td><span class="badge bg-info">@project.ProjectPriority?.Name</span></td>
												}
												else if (@project.ProjectPriority?.Name == nameof(BTProjectPriority.High))
												{
													<td><span class="badge bg-warning">@project.ProjectPriority?.Name</span></td>
												}
												else
												{
													<td><span class="badge bg-danger">@project.ProjectPriority?.Name</span></td>
												}

												<td>
													<a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id"><i class="fs-5 bi-justify"></i> </a>
												</td>
											</tr>
										}
									</tbody>
								</table>
							</div>

						</div>
						<div class="card-footer">
						</div>
					</div>
				</div>
			</div>
			@* Tickets Table *@
			<div class="col-12 mt-3">
				<div class="">
					<div class="card m-1 p-2">
						<div class="card-header">
							<h2>Tickets</h2>
						</div>
						<div class="card-body">
							
                 
							<div  class="table-responsive" style="overflow-y:auto;height:600px;">
								<table id="ticketsTable" class="table table-hover">
									<thead class="">
										<tr>
											
											<th>Title</th>
											<th>Developer</th>
											<th>Status</th>
											<th>Priority</th>
											<th>Date</th>
											<th>Action</th>
										</tr>
									</thead>
									<tbody>
										
										@foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
										{
											<tr>
												<td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
												<td>
													@if (ticket.DeveloperUserId != null)
													{
														@ticket.DeveloperUser?.FullName
													}
													else
													{

															<span class="badge bg-warning text-dark">Unassigned</span>
														

													}
												</td>
												@if (ticket.TicketStatus?.Name == "New")
												{
													<td><span class="badge bg-success rounded-pill">@ticket.TicketStatus.Name </span></td>

												}
												else
												{
													<td><span class="badge bg-secondary rounded-pill">@ticket.TicketStatus?.Name </span></td>
												}
												@if(ticket.TicketPriority?.Name == nameof(BTTicketPriority.Low))
												{
													<td><span class="badge bg-success">@ticket.TicketPriority?.Name </span></td>
												}
												else if (ticket.TicketPriority?.Name == nameof(BTTicketPriority.Medium))
												{
													<td><span class="badge bg-info">@ticket.TicketPriority?.Name </span></td>
												}
												else if (ticket.TicketPriority?.Name == nameof(BTTicketPriority.High))
												{
													<td><span class="badge bg-warning">@ticket.TicketPriority?.Name </span></td>
												}
												else 
												{
													<td><span class="badge bg-danger">@ticket.TicketPriority?.Name </span></td>
												}

												<td><span style="font-size:small">@ticket.Created.ToString("MM.dd.yyyy")</span></td>
												<td>
													<a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a>
												</td>
											</tr>
										}
									</tbody>
								</table>
							</div>

						</div>
						<div class="card-footer">
						</div>
					</div>
				</div>
			</div>

			@* Members Table *@
			<div class="col-12 mt-3">
				<div class="">
					<div class="card m-1 p-2">
						<div class="card-header">
							<h2>Members</h2>
						</div>
						<div class="card-body">


							<div class="table-responsive" style="overflow-y:auto;height:600px;">
								<table id="membersTable" class="table table-hover">
									<thead class="">
										<tr>

											<th>Employee</th>
											<th>Role</th>
											<th>Active Projects</th>
											<th>Open Tickets</th>

										</tr>
									</thead>
									<tbody>

										@foreach (BTUser member in Model.Members)
										{
											<tr>
												<td>
													<a href="javascript:void(0);" class="me-1">

														@if (member?.AvatarFileData != null)
														{
															<img class="media-object rounded-circle border border-dark" style="width:30px;height:30px;" src="data:image/*;base64,@(Convert.ToBase64String(member.AvatarFileData))" alt="" />
														}
														else
														{
															<img class="media-object" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" style="width:30px;height:30px;" />
														}
													</a>
													<a asp-action="EmployeeDetails" asp-controller="Companies" asp-route-id="@member.Id" style="color:black">@member.FullName</a>
												</td>
												<td>@((await RolesService.GetUserRolesAsync(member)).FirstOrDefault())</td>
												<td>
													@if(await RolesService.IsUserInRoleAsync(member, nameof(Roles.Admin))){
														@Model.Projects.Where(p => (p.StartDate < DateTime.Now && p.EndDate > DateTime.Now)).Count();
													}
													else{
														@Model.Projects.Where(p => (p.StartDate < DateTime.Now && p.EndDate > DateTime.Now) && p.Members.Contains(member)).Count()
													}
												</td>
												<td>@Model.Tickets.Where(p => (p.OwnerUserId == member.Id || p.DeveloperUserId == member.Id) && p.Archived == false).Count()</td>
											</tr>
										}
									</tbody>
								</table>
							</div>

						</div>
						<div class="card-footer">
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>


@section scripts{
	<!--Google Charts-->
	<script type="text/javascript" src="https://www.google.com/jsapi"></script>

	<script type="text/javascript">
		google.load("visualization", "1", { packages: ["corechart"] });
		google.setOnLoadCallback(drawChart);
		function drawChart() {
			$.ajax({
				type: "POST",
				url: "/Home/GglTicketPriority",
				data: '{}',
				contentType: "application/json; charset=utf-8",
				dataType: "json",
				success: function (result) {
					var data = google.visualization.arrayToDataTable(result);

					//3D Pie
					var options = {
						title: 'Ticket Priority',
						is3D: true,
						chartArea: { left: 0,bottom: 15,width: '100%', height: '100%'},
						legend: { position: 'bottom' }

					};

					var chart = new google.visualization.PieChart($("#chart3D")[0]);
					chart.draw(data, options);
				},
				failure: function (rresult) {
					alert(result.d);
				},
				error: function (result) {
					alert(result.d);
				}
			});
		}
	</script>
	<script type="text/javascript">
		google.load("visualization", "1", { packages: ["corechart"] });
		google.setOnLoadCallback(drawChart);
		function drawChart() {
			$.ajax({
				type: "POST",
				url: "/Home/GglProjectTickets",
				data: '{}',
				contentType: "application/json; charset=utf-8",
				dataType: "json",
				success: function (result) {
					var data = google.visualization.arrayToDataTable(result);

					//Donut
					var options = {
						title: 'Company Ticket Distribution',
						pieHole: 0.3,
						chartArea: { left: 0,bottom: 15,width: '100%', height: '100%'},
						legend: { position: 'bottom' }
					};
					var chart = new google.visualization.PieChart($("#donut")[0]);
					chart.draw(data, options);
				},
				failure: function (rresult) {
					alert(result.d);
				},
				error: function (result) {
					alert(result.d);
				}
			});
		}
	</script>



	<!--  Plotly Charts  -->
	<!-- Load plotly.js into the DOM -->
	<script src='https://cdn.plot.ly/plotly-2.4.2.min.js'></script>
	<script>
		$.ajax({
			type: "POST",
			url: "/Home/PlotlyBarChart",
			data: '{}',
			contentType: "application/json; charset=utf-8",
			dataType: "json",
			success: function (result) {
				var data = result;

				var layout = { barmode: 'group' };

				Plotly.newPlot('plotlyChart', data, layout);
			},
			failure: function (result) {
				alert(result.d);
			},
			error: function (result) {
				alert(result.d);
			}
		});
	</script>


	<script src="/assets/libs/jquery/dist/jquery.min.js"></script>
	<script src="/assets/libs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
	<script src="/assets/js/sidebarmenu.js"></script>
	<script src="/assets/libs/simplebar/dist/simplebar.js"></script>
	

}


